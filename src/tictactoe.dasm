; TODO You may want to change the copyright of all files. This is the
; TODO ISC license. Choose another one if you want.
;
; Copyright (c) 2015 Joe Jackson <cpmhjoe@gmail.com>
;
; Permission to use, copy, modify, and/or distribute this software for any
; purpose with or without fee is hereby granted, provided that the above
; copyright notice and this permission notice appear in all copies.
;
; THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
; WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
; MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
; ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
; WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
; ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
; OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

  processor 6502
  include "vcs.h"
  include "macro.h"

;------------------------------------------------------------------------------
; Variables

  seg.u vars
  org $80                             ; start of RAM

SpriteTablePtr ds 2                   ; Pointer for the datatable
SpriteEnd ds 1                        ; Possition of top of sprite from bottom

;------------------------------------------------------------------------------

  seg
  org $F000

Reset
  ; clear RAM and all TIA registers

  ldx #0
  lda #0
Clear sta 0,x
  inx
  bne Clear

  ldx #$FF
  txs                                 ; set stack pointer

;------------------------------------------------------------------------------
; Once only initialization

  lda #%00000001                      ; reflected playfield
  sta CTRLPF

  lda #$0e                            ; white board
  sta COLUPF                          ; set playfield color

  lda #$84                            ; set player 1 to blue
  sta COLUP0

  ; load the sprite ptr in little endian format
  lda #<SpriteDataX ;2
  sta SpriteTablePtr ;3

  lda #>SpriteDataX ;2                 ; store the high byte
  sta SpriteTablePtr+1 ;3

  ; set sprite verticle position
  lda #116
  sta SpriteEnd

  ; double the size?
  lda #%0000111
  sta NUSIZ0

;------------------------------------------------------------------------------

StartOfFrame
  ; Start of a new frame
  ; Start of vertical blank
  lda #0
  sta VBLANK

  lda #2
  sta VSYNC

  sta WSYNC
  sta WSYNC
  sta WSYNC                           ; 3 scanlines of VSYNC signal

  lda #0
  sta VSYNC

;------------------------------------------------------------------------------
; 37 lines of vertical blank

  ldx #0                              ; start at 0
VerticalBlank sta WSYNC               ; wait for scanline 37 times
  inx
  cpx #37
  bne VerticalBlank

;------------------------------------------------------------------------------
; 192 scanlines of picture 76 cycles per scanline
  ldx #64
FirstRowSegment
  lda SpriteDataX,x                   ; 4 : 18 load sprite
  sta GRP0                            ; 3 : 22

  SLEEP 13
  sta RESP0 ; 3

  SLEEP 27
  sta RESP0 ; 3

  lda screen_STRIP_3+127,x            ; 4 : 11 PF2 Left
  sta PF2                             ; 3 : 14

  lda screen_STRIP_2+127,x            ; 4 : 4 PF1 Left
  sta PF1                             ; 3 : 7

  sta WSYNC
  dex
  bne FirstRowSegment

  ldx #128                              ; scanline counter
RestSegment
  lda screen_STRIP_2,x                ; 4+ PF1 Left
  sta PF1                               ; 3

  lda screen_STRIP_3,x                ; 4+ PF2 Left
  sta PF2                               ; 3
                                        ; 14 total


  sta WSYNC
  dex
  bne RestSegment

;------------------------------------------------------------------------------

  lda #0                               ; Clear player graphics
  sta PF1
  sta PF2

  lda #%01000010                       ; end of screen enter blanking
  sta VBLANK

  ; 30 scanlines of overscan

  ldx #0
Overscan sta WSYNC
  inx
  cpx #30
  bne Overscan

  jmp StartOfFrame

  include "tictactoe.bmp"
;------------------------------------------------------------------------------
; Data Tables

  align 256,0
SpriteHeight = 42
SpriteDataX
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%10000001
  .byte #%10000001                    ; this is a 24 high X shape
  .byte #%10000001
  .byte #%10000001
  .byte #%10000001
  .byte #%01000010
  .byte #%01000010
  .byte #%01000010
  .byte #%01000010
  .byte #%01000010
  .byte #%01000010
  .byte #%00100100
  .byte #%00100100
  .byte #%00100100
  .byte #%00100100
  .byte #%00100100
  .byte #%00100100
  .byte #%00100100
  .byte #%00011000
  .byte #%00011000
  .byte #%00011000
  .byte #%00011000
  .byte #%00011000
  .byte #%00011000
  .byte #%00100100
  .byte #%00100100
  .byte #%00100100
  .byte #%00100100
  .byte #%00100100
  .byte #%00100100
  .byte #%01000010
  .byte #%01000010
  .byte #%01000010
  .byte #%01000010
  .byte #%01000010
  .byte #%01000010
  .byte #%10000001
  .byte #%10000001
  .byte #%10000001
  .byte #%10000001
  .byte #%10000001
  .byte #%10000001
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000
  .byte #%00000000

;------------------------------------------------------------------------------
  org $FFFA

InterruptVectors
  .word Reset          ; NMI
  .word Reset          ; RESET
  .word Reset          ; IRQ

  END
